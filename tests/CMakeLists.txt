CMAKE_MINIMUM_REQUIRED(VERSION 3.10)
PROJECT(Tests)

LOAD_OPENCV()

IF (TARGET_OS STREQUAL "Android")
    LOAD_ANDROID_ENV()
    LIST(APPEND ANDROID_JIN_LIBS mediandk)
ENDIF()

SET(DEPENDENCY_INCLUDES
    ${OpenCV_INCLUDE_DIRS}
    ${PROJECT_INCLUDE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/ort
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/ncnn
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/trt
)

SET(DEPENDENCY_LIBS
    ai_core::ai_core
    logger::logger
    encrypt::encrypt
    ${OpenCV_LIBS}
    GTest::gtest
    GTest::gtest_main
    ${ANDROID_JIN_LIBS}
)

IF(WITH_ORT_ENGINE)
	LOAD_ONNXRUNTIME()
	LIST(APPEND DEPENDENCY_INCLUDES  
		${ONNXRUNTIME_INCLUDE_DIR}
    	${ONNXRUNTIME_INCLUDE_DIR}/onnxruntime
	)
	LIST(APPEND DEPENDENCY_LIBS ${ONNXRUNTIME_LIBS})
	ADD_DEFINITIONS(-DWITH_ORT)
ENDIF()

IF(WITH_NCNN_ENGINE)
	LOAD_OPENMP()
	LOAD_NCNN()

	LIST(APPEND DEPENDENCY_INCLUDES  
		${NCNN_INCLUDE_DIR}
	)
	LIST(APPEND DEPENDENCY_LIBS ${NCNN_LIBS} ${OpenMP_CXX_FLAGS})
	ADD_DEFINITIONS(-DWITH_NCNN)
ENDIF()

IF(WITH_TRT_ENGINE)
	LOAD_CUDA()
	LOAD_TENSORRT()

	LIST(APPEND DEPENDENCY_INCLUDES  
		${TensorRT_INCLUDE_DIR}
		${CUDAToolkit_INCLUDE_DIRS}
		${CMAKE_CURRENT_SOURCE_DIR}/trt
	)

	LIST(APPEND DEPENDENCY_LIBS TensorRT::nvinfer)
	ADD_DEFINITIONS(-DWITH_TRT)
ENDIF()

FILE(GLOB CURRENT_DIR_SRCS ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp ${CMAKE_CURRENT_SOURCE_DIR}/*.cc)

MESSAGE(STATUS "APP SOURCES: ${CURRENT_DIR_SRCS}")

FILE(MAKE_DIRECTORY ${PROJECT_OUTPUT_DIR}/bin/tests)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_OUTPUT_DIR}/bin/tests)

ADD_EXECUTABLE(ai_core_tests ${CURRENT_DIR_SRCS})
TARGET_INCLUDE_DIRECTORIES(ai_core_tests PRIVATE ${DEPENDENCY_INCLUDES})
TARGET_LINK_LIBRARIES(ai_core_tests PRIVATE ${DEPENDENCY_LIBS})
INSTALL(TARGETS ai_core_tests DESTINATION tests)
